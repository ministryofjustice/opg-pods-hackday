on:
  workflow_call:
    inputs:
      workspace_name:
        description: 'The terraform workspace to target for environment actions'
        required: true
        type: string
      version_tag:
        description: 'The docker image tag to deploy in the environment'
        required: true
        type: string
      working_directory:
        description: 'The working directory for account level terraform configuration'
        required: true
        type: string
    outputs:
      url:
        description: "URL for environment"
        value: ${{ jobs.terraform_environment_workflow.outputs.url }}
jobs:
  terraform_environment_workflow:
    runs-on: ubuntu-latest
    outputs:
      terraform_workspace_name: ${{ steps.terraform_outputs.outputs.workspace_name }}
      terraform_container_version: ${{ steps.terraform_outputs.outputs.container_version }}
      url: ${{ steps.terraform_outputs.outputs.url }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: unfor19/install-aws-cli-action@v1
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.6
          terraform_wrapper: false
      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: PodsHackdayTerraformGithubAction
      - name: Lint Terraform
        id: tf_lint
        run: terraform fmt -check -recursive
        working-directory: ${{ inputs.working_directory }}
        continue-on-error: true

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ${{ inputs.working_directory }}

      - name: Terraform Plan
        working-directory: ${{ inputs.working_directory }}
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_container_version: ${{ inputs.version_tag }}
        run: |
          terraform workspace show
          terraform plan -lock-timeout=300s -input=false -parallelism=30

      - name: Terraform Apply
        working-directory: ${{ inputs.working_directory }}
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_container_version: ${{ inputs.version_tag }}
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30

      - name: Terraform Outputs
        id: terraform_outputs
        working-directory: ${{ inputs.working_directory }}
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_container_version: ${{ inputs.version_tag }}
        run: |
          echo ::set-output name=url::$(terraform output -raw app_fqdn)
